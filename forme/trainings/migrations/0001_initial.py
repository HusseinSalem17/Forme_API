# Generated by Django 5.0.3 on 2024-05-03 05:24

import django.contrib.postgres.fields
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('authentication', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('picture', models.ImageField(blank=True, null=True, upload_to='program_pictures/')),
                ('description', models.TextField(blank=True, null=True)),
                ('level', models.CharField(blank=True, max_length=255)),
                ('type', models.CharField(blank=True, max_length=255)),
                ('target_gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('both', 'Both')], default='both', max_length=255)),
                ('sport_field', models.CharField(blank=True, max_length=255, null=True)),
                ('min_age', models.PositiveIntegerField(default=18)),
                ('max_age', models.PositiveIntegerField(default=99)),
                ('current_trainees_count', models.PositiveIntegerField(default=0)),
                ('program_capacity', models.PositiveIntegerField(blank=True, null=True)),
                ('avg_ratings', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(5.0)])),
                ('number_of_ratings', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duration', models.PositiveIntegerField(default=15)),
                ('target_gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('both', 'Both')], default='both', max_length=255)),
                ('min_age', models.PositiveIntegerField(default=18)),
                ('max_age', models.PositiveIntegerField(default=99)),
                ('update_body_measure', models.BooleanField(default=False)),
                ('update_pref_lifestyle', models.BooleanField(default=False)),
                ('attach_body_img', models.BooleanField(default=False)),
                ('attach_med_report', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Trainee',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='trainee_profile', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('height', models.FloatField(blank=True, null=True)),
                ('weight', models.FloatField(blank=True, null=True)),
                ('fitness_goals', models.TextField(blank=True)),
                ('current_physical_level', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Trainer',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='trainer_profile', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('slug', models.SlugField(blank=True, editable=False, null=True, unique=True)),
                ('bio', models.TextField(blank=True)),
                ('sport_field', models.CharField(blank=True, max_length=255)),
                ('is_active', models.BooleanField(default=False)),
                ('document_files', django.contrib.postgres.fields.ArrayField(base_field=models.FileField(upload_to='club_documents/'), default=list, size=None)),
                ('id_card', models.FileField(blank=True, upload_to='id_cards/')),
                ('background_image', models.ImageField(blank=True, upload_to='background_images/')),
                ('number_of_trainees', models.PositiveIntegerField(default=0)),
                ('exp_injuries', models.BooleanField(default=False)),
                ('physical_disabilities', models.BooleanField(default=False)),
                ('experience', models.CharField(blank=True, max_length=5, null=True)),
                ('current_balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('total_balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('languages', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), blank=True, default=list, size=None)),
                ('facebook_url', models.URLField(blank=True, null=True)),
                ('instagram_url', models.URLField(blank=True, null=True)),
                ('youtube_url', models.URLField(blank=True, null=True)),
                ('verified', models.BooleanField(default=False)),
                ('avg_ratings', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(5.0)])),
                ('number_of_ratings', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='ProgramPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duration_in_weeks', models.PositiveIntegerField()),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('is_offer', models.BooleanField(default=False)),
                ('offer_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('current_trainees_count', models.PositiveIntegerField(default=0)),
                ('max_trainees', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='program_plans', to='trainings.program')),
            ],
        ),
        migrations.CreateModel(
            name='Availability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday'), ('Sunday', 'Sunday')], max_length=255)),
                ('is_active', models.BooleanField(default=False)),
                ('session', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='trainer_avilablity', to='trainings.session')),
            ],
            options={
                'unique_together': {('day', 'session')},
            },
        ),
        migrations.CreateModel(
            name='Time',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_time', models.TimeField()),
                ('to_time', models.TimeField()),
                ('availability', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availability_times', to='trainings.availability')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ratings', models.FloatField(validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(5.0)])),
                ('comment', models.TextField(blank=True)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('trainee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='trainee_reviews', to='trainings.trainee')),
            ],
        ),
        migrations.AddField(
            model_name='program',
            name='trainees',
            field=models.ManyToManyField(blank=True, related_name='trainee_programs', to='trainings.trainee'),
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(default='EGP', max_length=255)),
                ('method', models.CharField(blank=True, max_length=255)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=255)),
                ('transaction_id', models.CharField(blank=True, max_length=255, null=True)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('trainee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trainee_payments', to='trainings.trainee')),
            ],
        ),
        migrations.CreateModel(
            name='ClientRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('rejected', 'Rejected'), ('cancelled', 'Cancelled')], default='pending', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('program_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='program_requests', to='trainings.programplan')),
                ('trainee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trainee_requests', to='trainings.trainee')),
            ],
        ),
        migrations.AddField(
            model_name='session',
            name='trainer',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='trainer_session', to='trainings.trainer'),
        ),
        migrations.AddField(
            model_name='program',
            name='trainer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trainer_programs', to='trainings.trainer'),
        ),
        migrations.CreateModel(
            name='Transformations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, upload_to='transformations/')),
                ('details', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('trainer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trainer_transformations', to='trainings.trainer')),
            ],
        ),
        migrations.CreateModel(
            name='Workout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('picture', models.ImageField(blank=True, null=True, upload_to='workout_pictures/')),
                ('description', models.TextField(blank=True, null=True)),
                ('level', models.CharField(blank=True, max_length=255)),
                ('target_gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('both', 'Both')], default='both', max_length=255)),
                ('min_age', models.PositiveIntegerField(default=18)),
                ('max_age', models.PositiveIntegerField(default=99)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('is_offer', models.BooleanField(default=False)),
                ('offer_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('num_complete_videos', models.PositiveIntegerField(default=0)),
                ('sport_field', models.CharField(blank=True, max_length=255, null=True)),
                ('current_trainees_count', models.PositiveIntegerField(default=0)),
                ('duration_in_minutes', models.PositiveIntegerField(default=0)),
                ('number_of_videos', models.PositiveIntegerField(default=0)),
                ('avg_ratings', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(5.0)])),
                ('number_of_ratings', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('trainees', models.ManyToManyField(blank=True, related_name='trainee_workouts', to='trainings.trainee')),
                ('trainer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trainer_workouts', to='trainings.trainer')),
            ],
        ),
        migrations.CreateModel(
            name='WorkoutFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_or_video', models.FileField(blank=True, null=True, upload_to='workout_files/')),
                ('video_duration', models.PositiveIntegerField(default=0)),
                ('title', models.CharField(max_length=255)),
                ('details', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('workout', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='workout_files', to='trainings.workout')),
            ],
        ),
        migrations.CreateModel(
            name='Package',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_type', models.CharField(choices=[('Messaging', 'Messaging'), ('Voice Call', 'Voice Call'), ('Video Call', 'Video Call'), ('In Person', 'In Person')], max_length=255)),
                ('is_active', models.BooleanField(default=False)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='session_packages', to='trainings.session')),
            ],
            options={
                'unique_together': {('session_type', 'session')},
            },
        ),
    ]
