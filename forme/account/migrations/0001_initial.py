# Generated by Django 5.0 on 2024-02-11 12:18

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pics')),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], default='Male', max_length=6)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OTP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('otp', models.IntegerField()),
                ('validity', models.DateTimeField()),
                ('verified', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Owner',
            fields=[
                ('user', models.OneToOneField(limit_choices_to={'groups__name': None}, on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='club_owner', serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='tokens', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TraineeProfile',
            fields=[
                ('user', models.OneToOneField(limit_choices_to={'groups__name': None}, on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='trainee_profile', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('fitness_goals', models.TextField(blank=True)),
                ('current_fitness_level', models.CharField(blank=True, max_length=255)),
                ('trainers', models.ManyToManyField(blank=True, limit_choices_to={'groups__name': 'trainers'}, related_name='trainees', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.FloatField(validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(5.0)])),
                ('comment', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('trainee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trainee_ratings', to='account.traineeprofile')),
            ],
        ),
        migrations.CreateModel(
            name='TrainerProfile',
            fields=[
                ('user', models.OneToOneField(limit_choices_to={'groups__name': None}, on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='trainer_profile', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('bio', models.TextField(blank=True)),
                ('sport_field', models.CharField(blank=True, max_length=255)),
                ('certification_files', models.FileField(blank=True, upload_to='certifications/')),
                ('id_card', models.FileField(blank=True, upload_to='id_cards/')),
                ('background_image', models.ImageField(blank=True, upload_to='background_images/')),
                ('experience', models.CharField(blank=True, max_length=5, null=True)),
                ('verified', models.BooleanField(default=False)),
                ('number_of_trainees', models.PositiveIntegerField(default=0)),
                ('trainees', models.ManyToManyField(blank=True, limit_choices_to={'groups__name': 'trainees'}, related_name='trainers', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
